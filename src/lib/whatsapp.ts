// N√∫mero de WhatsApp de la tienda (sin + ni espacios)
const WHATSAPP_NUMBER = '56986874406'

export interface WhatsAppMessageData {
  orderNumber?: string
  customerName?: string
  items?: Array<{
    name: string
    quantity: number
    price: number
  }>
  total?: number
  pickupDate?: string
  pickupTime?: string
  customerNotes?: string
  type: 'order_confirmation' | 'payment_confirmation' | 'ready_pickup' | 'general_inquiry' | 'custom'
  customMessage?: string
}

// Generar mensaje de WhatsApp para pedidos
export function generateWhatsAppMessage(data: WhatsAppMessageData): string {
  switch (data.type) {
    case 'order_confirmation':
      return generateOrderConfirmationMessage(data)
    case 'payment_confirmation':
      return generatePaymentConfirmationMessage(data)
    case 'ready_pickup':
      return generateReadyPickupMessage(data)
    case 'general_inquiry':
      return generateGeneralInquiryMessage()
    case 'custom':
      return data.customMessage || 'Hola, necesito ayuda con mi pedido.'
    default:
      return 'Hola, necesito informaci√≥n sobre mis pedidos.'
  }
}

// Generar URL de WhatsApp
export function generateWhatsAppURL(message: string): string {
  const encodedMessage = encodeURIComponent(message)
  return `https://wa.me/${WHATSAPP_NUMBER}?text=${encodedMessage}`
}

// Generar mensaje de confirmaci√≥n de pedido
function generateOrderConfirmationMessage(data: WhatsAppMessageData): string {
  const itemsList = data.items?.map(item => 
    `‚Ä¢ ${item.name} x${item.quantity} = $${(item.price * item.quantity).toLocaleString('es-CL')}`
  ).join('\n') || ''

  return `üç∞ *Confirmaci√≥n de Pedido*

Hola! He realizado un pedido y quer√≠a confirmar los detalles:

üìã *Pedido:* ${data.orderNumber || 'N/A'}
üë§ *Cliente:* ${data.customerName || 'N/A'}

üõçÔ∏è *Productos:*
${itemsList}

üí∞ *Total:* $${data.total?.toLocaleString('es-CL') || 'N/A'}

üìÖ *Retiro:* ${data.pickupDate || 'N/A'} a las ${data.pickupTime || 'N/A'}

${data.customerNotes ? `üìù *Notas:* ${data.customerNotes}` : ''}

¬øPodr√≠an confirmar que todo est√° correcto?

¬°Gracias! üòä`
}

// Generar mensaje de confirmaci√≥n de pago
function generatePaymentConfirmationMessage(data: WhatsAppMessageData): string {
  return `üí≥ *Confirmaci√≥n de Pago*

Hola! He realizado el pago para mi pedido:

üìã *Pedido:* ${data.orderNumber || 'N/A'}
üë§ *Cliente:* ${data.customerName || 'N/A'}
üí∞ *Total:* $${data.total?.toLocaleString('es-CL') || 'N/A'}

He enviado el comprobante de transferencia. ¬øPodr√≠an confirmar que lo recibieron?

üìÖ *Retiro programado:* ${data.pickupDate || 'N/A'} a las ${data.pickupTime || 'N/A'}

¬°Gracias! üòä`
}

// Generar mensaje para retiro listo
function generateReadyPickupMessage(data: WhatsAppMessageData): string {
  return `üéâ *Consulta sobre Retiro*

Hola! Quer√≠a confirmar si mi pedido est√° listo para retiro:

üìã *Pedido:* ${data.orderNumber || 'N/A'}
üë§ *Cliente:* ${data.customerName || 'N/A'}
üìÖ *Retiro programado:* ${data.pickupDate || 'N/A'} a las ${data.pickupTime || 'N/A'}

¬øEst√° listo para retirar?

¬°Gracias! üòä`
}

// Generar mensaje de consulta general
function generateGeneralInquiryMessage(): string {
  return `üëã *Consulta General*

Hola! Tengo una consulta sobre:

‚Ä¢ Productos disponibles
‚Ä¢ Precios y promociones
‚Ä¢ Horarios de atenci√≥n
‚Ä¢ Proceso de pedidos

¬øPodr√≠an ayudarme?

¬°Gracias! üòä`
}

// Templates para el admin
export const ADMIN_WHATSAPP_TEMPLATES = {
  orderReceived: (orderNumber: string, customerName: string) => `
‚úÖ *Pedido Recibido*

Hola ${customerName}!

Hemos recibido tu pedido #${orderNumber} correctamente.

Te contactaremos pronto con las instrucciones de pago.

¬°Gracias por elegirnos! üç∞
  `.trim(),

  paymentConfirmed: (orderNumber: string, customerName: string, pickupDate: string, pickupTime: string) => `
üí≥ *Pago Confirmado*

Hola ${customerName}!

Tu pago para el pedido #${orderNumber} ha sido confirmado ‚úÖ

üéÇ Ya comenzamos a preparar tu pedido
üìÖ Retiro: ${pickupDate} a las ${pickupTime}
üìç Direcci√≥n: Progreso 393, Chiguayante

¬°Te esperamos! üòä
  `.trim(),

  orderReady: (orderNumber: string, customerName: string) => `
üéâ *¬°Pedido Listo!*

Hola ${customerName}!

Tu pedido #${orderNumber} est√° listo para retiro üéÇ

üìç Direcci√≥n: Progreso 393, Chiguayante
‚è∞ Horarios: Lun-Vie 9:00-19:00, S√°b 9:00-17:00, Dom 10:00-15:00

¬°Te esperamos! üòä
  `.trim(),

  paymentReminder: (orderNumber: string, customerName: string, total: number) => `
‚è∞ *Recordatorio de Pago*

Hola ${customerName}!

Tu pedido #${orderNumber} est√° pendiente de pago.

üí∞ Total: $${total.toLocaleString('es-CL')}

Por favor, realiza la transferencia y env√≠a el comprobante.

¬°Gracias! üòä
  `.trim()
}

// Funci√≥n para generar enlaces r√°pidos para el admin
export function generateAdminWhatsAppLinks(orderData: {
  orderNumber: string
  customerName: string
  customerPhone: string
  total: number
  pickupDate: string
  pickupTime: string
}) {
  const baseURL = `https://wa.me/${orderData.customerPhone.replace(/\D/g, '')}?text=`
  
  return {
    orderReceived: baseURL + encodeURIComponent(
      ADMIN_WHATSAPP_TEMPLATES.orderReceived(orderData.orderNumber, orderData.customerName)
    ),
    paymentConfirmed: baseURL + encodeURIComponent(
      ADMIN_WHATSAPP_TEMPLATES.paymentConfirmed(
        orderData.orderNumber, 
        orderData.customerName, 
        orderData.pickupDate, 
        orderData.pickupTime
      )
    ),
    orderReady: baseURL + encodeURIComponent(
      ADMIN_WHATSAPP_TEMPLATES.orderReady(orderData.orderNumber, orderData.customerName)
    ),
    paymentReminder: baseURL + encodeURIComponent(
      ADMIN_WHATSAPP_TEMPLATES.paymentReminder(
        orderData.orderNumber, 
        orderData.customerName, 
        orderData.total
      )
    )
  }
}

// Funci√≥n para validar n√∫mero de WhatsApp chileno
export function validateChileanWhatsApp(phone: string): boolean {
  // Remover todos los caracteres no num√©ricos
  const cleanPhone = phone.replace(/\D/g, '')
  
  // Verificar formato chileno: 56 + 9 + 8 d√≠gitos
  const chileanPattern = /^56[9][0-9]{8}$/
  
  return chileanPattern.test(cleanPhone)
}

// Funci√≥n para formatear n√∫mero chileno
export function formatChileanWhatsApp(phone: string): string {
  const cleanPhone = phone.replace(/\D/g, '')
  
  if (cleanPhone.startsWith('56')) {
    return cleanPhone
  } else if (cleanPhone.startsWith('9') && cleanPhone.length === 9) {
    return `56${cleanPhone}`
  } else if (cleanPhone.length === 8) {
    return `569${cleanPhone}`
  }
  
  return cleanPhone
} 